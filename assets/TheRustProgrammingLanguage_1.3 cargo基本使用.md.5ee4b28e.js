import{_ as a,o as e,c as o,O as r}from"./chunks/framework.571309da.js";const p=JSON.parse('{"title":"Cargo基本使用","description":"","frontmatter":{},"headers":[],"relativePath":"TheRustProgrammingLanguage/1.3 cargo基本使用.md","filePath":"TheRustProgrammingLanguage/1.3 cargo基本使用.md"}'),c={name:"TheRustProgrammingLanguage/1.3 cargo基本使用.md"},t=r('<h1 id="cargo基本使用" tabindex="-1">Cargo基本使用 <a class="header-anchor" href="#cargo基本使用" aria-label="Permalink to &quot;Cargo基本使用&quot;">​</a></h1><p><code>cargo</code>是Rust工具链中内置的构建系统及包管理器，类似npm，用于处理构建代码、下载编译依赖库等琐碎但重要的任务</p><h2 id="查看cargo版本" tabindex="-1">查看cargo版本 <a class="header-anchor" href="#查看cargo版本" aria-label="Permalink to &quot;查看cargo版本&quot;">​</a></h2><p><code>cargo --version</code></p><h2 id="使用cargo创建项目" tabindex="-1">使用cargo创建项目 <a class="header-anchor" href="#使用cargo创建项目" aria-label="Permalink to &quot;使用cargo创建项目&quot;">​</a></h2><p><code>cargo new project_name</code></p><h2 id="使用cargo构建和运行项目" tabindex="-1">使用cargo构建和运行项目 <a class="header-anchor" href="#使用cargo构建和运行项目" aria-label="Permalink to &quot;使用cargo构建和运行项目&quot;">​</a></h2><h3 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h3><p><code>cargo build</code></p><ul><li><p>执行命令后会生成<code>target/debug/project_name</code>可执行文件</p></li><li><p>当执行该命令后会生成<code>Cargo.lock</code>文件，类似npm项目中的<code>package.lock.json</code>，用于锁定当前引用包的版本（有一篇会专门讲解crate/package/module在代码组织上的用处）</p></li></ul><p><code>cargo build --release</code></p><ul><li>以Release模式进行构建</li><li>生成的文件会被放在<code>target/release</code>目录下</li><li>这种模式会以更长的编译时间为代价来优化代码，从而使代码拥有更好的运行性能，这也是拥有两种构建模式的原因，一种用于开发，另一种用于构建交付给用户的最终程序</li></ul><h3 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h3><p><code>cargo run</code></p><ul><li>假如你想对代码的运行效率进行基准测试，可以使用<code>cargo run --release</code>进行构建，并使用<code>target/release</code>目录下的可执行程序进行测试</li></ul><h3 id="检查代码是否可以通过编译" tabindex="-1">检查代码是否可以通过编译 <a class="header-anchor" href="#检查代码是否可以通过编译" aria-label="Permalink to &quot;检查代码是否可以通过编译&quot;">​</a></h3><p><code>cargo check</code></p>',17),l=[t];function d(i,n,g,s,h,u){return e(),o("div",null,l)}const m=a(c,[["render",d]]);export{p as __pageData,m as default};
