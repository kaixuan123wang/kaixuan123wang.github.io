import{_ as a,o as s,c as l,O as e}from"./chunks/framework.571309da.js";const C=JSON.parse('{"title":"Hello, world!","description":"","frontmatter":{},"headers":[],"relativePath":"TheRustProgrammingLanguage/Hello, world.md","filePath":"TheRustProgrammingLanguage/Hello, world.md"}'),o={name:"TheRustProgrammingLanguage/Hello, world.md"},n=e(`<h1 id="hello-world" tabindex="-1">Hello, world! <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello, world!&quot;">​</a></h1><h2 id="所有语言入门的第一课-输出hello-world" tabindex="-1">所有语言入门的第一课：输出Hello，world！ <a class="header-anchor" href="#所有语言入门的第一课-输出hello-world" aria-label="Permalink to &quot;所有语言入门的第一课：输出Hello，world！&quot;">​</a></h2><div class="language-Rust"><button title="Copy Code" class="copy"></button><span class="lang">Rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// main.rs</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="这段代码涉及到三个知识点" tabindex="-1">这段代码涉及到三个知识点 <a class="header-anchor" href="#这段代码涉及到三个知识点" aria-label="Permalink to &quot;这段代码涉及到三个知识点&quot;">​</a></h2><ul><li>像c一样，main函数为入口函数也叫主函数</li><li>println!为宏，只要看到!就是宏而不是普通函数</li><li>&quot;Hello, world!&quot;为字符串</li><li>我们使用;分号结束该行，这表明表达式结束</li></ul><h2 id="格式化代码" tabindex="-1">格式化代码 <a class="header-anchor" href="#格式化代码" aria-label="Permalink to &quot;格式化代码&quot;">​</a></h2><div class="language-Command"><button title="Copy Code" class="copy"></button><span class="lang">Command</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">rustfmt main.rs</span></span></code></pre></div><h2 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h2><div class="language-Command"><button title="Copy Code" class="copy"></button><span class="lang">Command</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">rustc main.rs</span></span></code></pre></div><p>执行此命令后会生成 <code>./main</code> 或 <code>./main.exe</code></p><h2 id="执行" tabindex="-1">执行 <a class="header-anchor" href="#执行" aria-label="Permalink to &quot;执行&quot;">​</a></h2><h3 id="macos" tabindex="-1">macos <a class="header-anchor" href="#macos" aria-label="Permalink to &quot;macos&quot;">​</a></h3><div class="language-Command"><button title="Copy Code" class="copy"></button><span class="lang">Command</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">./main</span></span></code></pre></div><h3 id="windows" tabindex="-1">windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;windows&quot;">​</a></h3><div class="language-Command"><button title="Copy Code" class="copy"></button><span class="lang">Command</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">./main.exe</span></span></code></pre></div>`,15),t=[n];function r(i,c,p,d,h,m){return s(),l("div",null,t)}const y=a(o,[["render",r]]);export{C as __pageData,y as default};
